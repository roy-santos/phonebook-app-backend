{"version":3,"sources":["services/phonebook.js","components/Filter.js","components/ContactForm.js","components/ContactList.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","phonebookServices","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","deleteItem","delete","Filter","filter","handleFilter","Typography","variant","TextField","fullWidth","size","placeholder","value","onChange","ContactForm","name","handleNewName","number","handleNewNumber","handleSubmit","onSubmit","Button","color","type","ContactList","props","contactsToShow","contacts","person","toLowerCase","includes","TableContainer","style","overflow","height","component","Paper","Table","TableBody","map","TableRow","TableCell","children","onClick","window","confirm","setMessage","setTimeout","setContacts","contact","Notification","message","severity","Alert","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","useEffect","initialContacts","Grid","container","spacing","justify","direction","alignItems","item","xs","event","target","preventDefault","personObject","find","p","returnedContact","catch","error","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc6784fd.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deleteItem = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst phonebookServices = {\r\n  getAll,\r\n  create,\r\n  update,\r\n  deleteItem,\r\n};\r\n\r\nexport default phonebookServices;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst Filter = ({ filter, handleFilter }) => {\r\n\r\n  return ( \r\n  <div>\r\n    <Typography variant='h6'>\r\n      Filter Contact List\r\n    </Typography> \r\n    <TextField fullWidth variant='outlined' size='small' placeholder='ex. John' value={filter} onChange={handleFilter} />\r\n  </div>\r\n  )\r\n };\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { Button } from '@material-ui/core'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst ContactForm = ({\r\n  name,\r\n  handleNewName,\r\n  number,\r\n  handleNewNumber,\r\n  handleSubmit,\r\n}) => (\r\n  <form onSubmit={handleSubmit}>\r\n    <Typography variant='h6'>\r\n      Add New Contact\r\n    </Typography>    \r\n    <div>\r\n      <TextField fullWidth variant='outlined' size='small' placeholder='Name' value={name} onChange={handleNewName} />\r\n    </div>\r\n    <div>\r\n      <TextField fullWidth variant='outlined' size='small' placeholder='Number' value={number} onChange={handleNewNumber} />\r\n    </div>\r\n    <div>\r\n      <Button fullWidth variant='contained' color='primary' size='small' type='submit'>add</Button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport phonebookServices from '../services/phonebook';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TableContainer, Table, TableBody, TableRow, TableCell, Paper } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst ContactList = (props) => {\r\n  const contactsToShow = props.filter\r\n    ? props.contacts.filter((person) =>\r\n        person.name.toLowerCase().includes(props.filter.toLowerCase())\r\n      )\r\n    : props.contacts;\r\n\r\n  const deleteContact = (name, id) => {\r\n    if (window.confirm(`Delete ${name}?`)) {\r\n      phonebookServices.deleteItem(id);\r\n      props.setMessage(`Deleted ${name}`);\r\n      setTimeout(() => {\r\n        props.setMessage(null);\r\n      }, 5000);\r\n      props.setContacts(props.contacts.filter((contact) => contact.id !== id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant='h6'>Contact List</Typography>\r\n      <TableContainer style={{ overflow:'auto', height: 200 }} component={Paper}>\r\n        <Table>\r\n          <TableBody>\r\n            {contactsToShow.map((person) => (\r\n              <TableRow key={person.id} style={{ height: '35px' }}>\r\n                <TableCell size='small' children='node' variant='body'>\r\n                  <Typography variant='body2'>\r\n                    {person.name} : {person.number}{' '}\r\n                    <Button variant='contained' color='secondary' size='small' onClick={() => deleteContact(person.name, person.id)}>\r\n                      Delete\r\n                    </Button>\r\n                  </Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n       </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst Notification = ({ message }) => {\r\n  const severity =\r\n    message === null || message.includes('Deleted') || message.includes('Error')\r\n      ? 'error'\r\n      : 'success';\r\n\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Alert severity={severity}>\r\n        {message}\r\n      </Alert>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\nimport phonebookServices from './services/phonebook';\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Notification from './components/Notification';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    phonebookServices.getAll().then((initialContacts) => {\n      setPersons(initialContacts);\n    });\n  }, []);\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n    if (persons.map((person) => person.name).includes(newName)) {\n      if (\n        window.confirm(\n          `${newName} is already in the phonebook, replace the old number with the new one?`\n        )\n      ) {\n        const person = persons.find((p) => p.name === newName);\n        phonebookServices\n          .update(person.id, personObject)\n          .then((returnedContact) => {\n            setMessage(`Updated ${returnedContact.name}`);\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000);\n            setPersons(\n              persons.map((contact) =>\n                contact.id !== person.id ? contact : returnedContact\n              )\n            );\n            setNewName('');\n            setNewNumber('');\n          })\n          .catch((error) => {\n            if (error.message.includes('400')) {\n              setMessage('Error: Number must contain at least 8 digits');\n            } else {\n              setMessage(\n                `Error: Contact info for ${person.name} has already been removed from server`\n              );\n              setTimeout(() => {\n                setMessage(null);\n              }, 5000);\n              setPersons(\n                persons.filter((contact) => contact.name !== person.name)\n              );\n            }\n          });\n      }\n    } else {\n      phonebookServices\n        .create(personObject)\n        .then((returnedContact) => {\n          setMessage(`Added ${returnedContact.name}`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n          setPersons(persons.concat(returnedContact));\n          setNewName('');\n          setNewNumber('');\n        })\n        .catch((error) => {\n          if (error.response.data.error.includes('name')) {\n            setMessage('Error: Name must contain at least 3 characters');\n          } else {\n            setMessage('Error: Number must contain at least 8 digits');\n          }\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Grid container spacing={2} justify='center' direction='row' alignItems='center'>\n        <Grid item xs={7}>\n          <Typography variant='h3'>\n            Phonebook\n          </Typography>\n          <Notification message={message} />\n        </Grid>\n        <Grid item xs={7}>\n          <Filter filter={filter} handleFilter={handleFilter} />\n          <ContactForm\n            name={newName}\n            handleNewName={handleNewName}\n            number={newNumber}\n            handleNewNumber={handleNewNumber}\n            handleSubmit={addPerson}\n          />\n        </Grid>\n        <Grid item xs={7}>\n          <ContactList\n            filter={filter}\n            contacts={persons}\n            setContacts={setPersons}\n            setMessage={setMessage}\n            />\n        </Grid>\n        </Grid>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}